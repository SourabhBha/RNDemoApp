// Code Generated by Sidekick is for learning and experimentation purposes only.
import React, { useState } from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import AppTextField from '../Components/AppTextField';
import AppButton from '../Components/AppButton';
import { validateEmailField } from './Validations'; // adjust path as needed

const ForgotPasswordScreen = ({ navigation }) => {
  const [email, setEmail] = useState('');
  const [errors, setErrors] = useState({});

  const handleContinue = () => {
    const validationErrors = validateEmailField(email);
    console.log("validationErrors: ", validationErrors);
    setErrors(validationErrors);
    if (Object.keys(validationErrors).length === 0) {
      // Password reset logic here
      // navigation.navigate('ResetPassword'); // if you have a reset screen
      console.log("Success");
      alert('Password reset link sent to your email!');
    } else {
        console.log("failed");
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Forgot Password</Text>
      <AppTextField
        placeholder="Email"
        value={email}
        onChangeText={setEmail}
        keyboardType="email-address"
        autoCapitalize="none"
      />
      {errors.email && <Text style={styles.errorText}>{errors.email}</Text>}
      <AppButton title="Continue" onPress={handleContinue} />
      {/* <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backBtn}>
        <Text style={styles.backText}>Back</Text>
      </TouchableOpacity> */}
    </View>
  );
};

const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: 'center', padding: 24, backgroundColor: '#f5f6fa' },
  title: { fontSize: 28, fontWeight: 'bold', color: '#273c75', marginBottom: 32, alignSelf: 'center' },
  errorText: { color: '#e84118', fontSize: 13, marginBottom: 8, marginLeft: 4 },
  backBtn: { alignSelf: 'flex-start', marginTop: 8 },
  backText: { color: '#487eb0', fontSize: 15 }
});

export default ForgotPasswordScreen;

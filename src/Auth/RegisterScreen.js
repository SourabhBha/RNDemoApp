// Code Generated by Sidekick is for learning and experimentation purposes only.
import React, { useState } from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import AppTextField from '../Components/AppTextField';
import AppButton from '../Components/AppButton';
import { validateRegisterFields } from './Validations'; // adjust path as needed

const RegisterScreen = ({ navigation }) => {
  const [fields, setFields] = useState({
    firstName: '',
    lastName: '',
    email: '',
    mobile: '',
    password: '',
  });
  const [errors, setErrors] = useState({});

  const handleChange = (key, value) => {
    setFields({ ...fields, [key]: value });
    setErrors({ ...errors, [key]: undefined });
  };

  const handleRegister = () => {
    const validationErrors = validateRegisterFields(fields);
    setErrors(validationErrors);
    if (Object.keys(validationErrors).length === 0) {
      // Registration logic here
      navigation.replace('Dashboard');
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Register</Text>
      <AppTextField
        placeholder="First Name"
        value={fields.firstName}
        onChangeText={val => handleChange('firstName', val)}
      />
      {errors.firstName && <Text style={styles.errorText}>{errors.firstName}</Text>}
      <AppTextField
        placeholder="Last Name"
        value={fields.lastName}
        onChangeText={val => handleChange('lastName', val)}
      />
      {errors.lastName && <Text style={styles.errorText}>{errors.lastName}</Text>}
      <AppTextField
        placeholder="Email Address"
        value={fields.email}
        onChangeText={val => handleChange('email', val)}
        keyboardType="email-address"
        autoCapitalize="none"
      />
      {errors.email && <Text style={styles.errorText}>{errors.email}</Text>}
      <AppTextField
        placeholder="Mobile Number"
        value={fields.mobile}
        onChangeText={val => handleChange('mobile', val)}
        keyboardType="numeric"
      />
      {errors.mobile && <Text style={styles.errorText}>{errors.mobile}</Text>}
      <AppTextField
        placeholder="Password"
        value={fields.password}
        onChangeText={val => handleChange('password', val)}
        secureTextEntry
      />
      {errors.password && <Text style={styles.errorText}>{errors.password}</Text>}
      <AppButton title="Register" onPress={handleRegister} />
      {/* <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backBtn}>
        <Text style={styles.backText}>Back</Text>
      </TouchableOpacity> */}
      <TouchableOpacity onPress={() => navigation.goBack()}>
        <Text style={styles.linkText}>Already have an account? <Text style={styles.linkHighlight}>Sign in</Text></Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: 'center', padding: 24, backgroundColor: '#f5f6fa' },
  title: { fontSize: 28, fontWeight: 'bold', color: '#273c75', marginBottom: 32, alignSelf: 'center' },
  errorText: { color: '#e84118', fontSize: 13, marginBottom: 8, marginLeft: 4 },
  backBtn: { alignSelf: 'flex-start', marginTop: 8 },
  backText: { color: '#487eb0', fontSize: 15 },
  linkText: { color: '#353b48', fontSize: 15, textAlign: 'center', marginTop: 16 },
  linkHighlight: { color: '#487eb0', fontWeight: 'bold' }
});

export default RegisterScreen;

// Code Generated by Sidekick is for learning and experimentation purposes only.
import React, {createContext, useState, useEffect, useContext} from 'react';
import AsyncStorage from '@react-native-async-storage/async-storage';

const AuthContext = createContext();

export const useAuth = () => useContext(AuthContext);

export const AuthProvider = ({children}) => {
  const [userToken, setUserToken] = useState(null);
  const [loading, setLoading] = useState(true);
  const isAuthenticated = !!userToken;

  useEffect(() => {
    // Check for token on app start
    const loadToken = async () => {
      const token = await AsyncStorage.getItem('userToken');
      setUserToken(token);
      setLoading(false);
    };
    loadToken();
  }, []);

  const login = async token => {
    await AsyncStorage.setItem('userToken', token);
    setUserToken(token);
  };

  const logout = async () => {
    await AsyncStorage.removeItem('userToken');
    setUserToken(null);
  };

  return (
    <AuthContext.Provider
      value={{userToken, isAuthenticated, login, logout, loading}}>
      {children}
    </AuthContext.Provider>
  );
};
